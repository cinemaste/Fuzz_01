 
#Glary Utilities Fuzzer
#Glary Utilities is the #1 free, 
#powerful and all-in-one utility in the world market! 
#It offers numerous powerful and easy-to-use system 
#tools and utilities to fix, speed up, maintain and protect your PC.
#http://www.glarysoft.com/

import math
import random
import string
import subprocess
import time



location = "./images/"
app = "C:\\Program Files (x86)\\Glary Utilities\\Integrator.exe"

file_extension = [".jpg",".gif",".png",".tif",".ico", ".bmp"]

fuzz_output = ""

FuzzFactor = 250
num_tests = 10000
num_crashed = 0 


def random_file():

    extension = random.choice(file_extension)
    global fuzz_output
    fuzz_output="fuzz"+extension
    rfile = str(random.randint(1,3))+extension
    return location+rfile

start_time = time.time() 



for i in range(num_tests):    
    file_choice = random_file()        
    buf = bytearray(open(file_choice,'rb').read())    
    numwrites = random.randrange(math.ceil((float(len(buf))/FuzzFactor)))+ 1
    
    for j in range(numwrites):
        rbyte = random.randrange(256)
        rn = random.randrange(len(buf))
        buf[rn] = "%c"%(rbyte)
        

        
    open(fuzz_output, 'wb').write(buf)
    process = subprocess.Popen([app,fuzz_output])
    
    time.sleep(1)
    crashed = process.poll()
    if crashed :
        num_crashed+=1
        print "Number of crashes:",num_crashed
        print "number of writes:", numwrites
        print "return code:", process.returncode
        print 
    else: 
        process.terminate()
        
end_time = (time.time()-start_time)         
print "Number of crashes is",num_crashed  
print "Time taken to complete %d iterations is %f s" % (num_tests, end_time)